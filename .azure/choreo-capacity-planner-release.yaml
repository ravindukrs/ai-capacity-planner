trigger:
  batch: true
  branches:
    include:
    - refs/tags/*

pr: none

jobs:
- job: DockerReleaseScanAndPush

  pool:
    vmImage: 'ubuntu-latest'

  variables:
    CONTAINER_REGISTRY: choreoctrlplane.azurecr.io
    CAPACITY_PLANNER_INIT_REPOSITORY: choreoipaas/capacity-planner-init
    CAPACITY_PLANNER_REPOSITORY: choreoipaas/capacity-planner
    TAG: $(Build.SourceBranchName)

  steps:
  - task: Docker@2
    displayName: 'Build Init Docker image'
    inputs:
      command: build
      containerRegistry: 'choreoctrlplane.azurecr.io'
      repository: $(CAPACITY_PLANNER_INIT_REPOSITORY)
      tags: $(TAG)
      Dockerfile: 'docker-images/initContainer/Dockerfile'
      buildContext: '.'

  - template: templates/trivy-docker-scan.yml
    parameters:
      repository: $(CAPACITY_PLANNER_INIT_REPOSITORY)
      tag: $(TAG)
      trivyExitCode: 0

  - task: Docker@2
    displayName: 'Push Init Docker image'
    inputs:
      command: push
      containerRegistry: 'choreoctrlplane.azurecr.io'
      repository: $(CAPACITY_PLANNER_INIT_REPOSITORY)
      tags: $(TAG)

  - task: Docker@2
    displayName: 'Build Service Docker image'
    inputs:
      command: build
      containerRegistry: 'wso2choreo-control-plane-acr'
      repository: $(CAPACITY_PLANNER_REPOSITORY)
      tags: $(TAG)
      Dockerfile: 'docker-images/service/Dockerfile'
      buildContext: '.'

  - template: templates/trivy-docker-scan.yml
    parameters:
      repository: $(CAPACITY_PLANNER_REPOSITORY)
      tag: $(TAG)
      trivyExitCode: 0

  - task: Docker@2
    displayName: 'Push Service Docker image'
    inputs:
      command: push
      containerRegistry: 'wso2choreo-control-plane-acr'
      repository: $(CAPACITY_PLANNER_REPOSITORY)
      tags: $(TAG)
